<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgGGEAIf//ABk/nQgfR6ciJ0qnTjBNpocyTKTCMk2m8TFV
        s+owUrG2V2WXie23N+H0uTH/8bU0//G1Mv/xtTD/8bUu//G1LP/xtCv/8bQp//G0J//xtCX/8bQj//G0
        Iv/ztRf/87AL8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC9kwgAtZcQ1PGa/slZwvtxnd7/1OV+7/jFX
        tf8wV7T/MGnO/zBkzP9Nbrj+5sVr//LKl//owbj/6MG2/+fAtf/nwLT/57+z/+e/sv/mvrH/5r2w/+a9
        r//mvK7/5buv/+q6cf/0txD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOoffADOF32altt7/6dfg/9LG
        2v9Bccr/LmDB/y9fvv8tcNX/LW3W/0t4xf/mynn/+uPA//Xl6v/y3uP/8+Dk//Ti5v/04eX/8+Dk//Le
        4//y3OL/8dvh//DZ4P/u1eD/6b2Q//S3E/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzme4ALpjuZZbF
        7v+dwen/aJve/zBz0/8tacv/LmbI/yt02P8rcNj/SnvI/+bKff/86MP/8t/l/+jI1P/w2N7/9eTl/+3U
        2//s0dr/7NDZ/+vP2P/rzdf/6s3X/+7U3v/pvI//9LcU/wAAAAAAAAAAAAAAAAAAAAAVNpAACiuEAiwo
        fg0giON9IZTw/x+K6f8igOL/KHnc/ytx1P8sbtH/Knjc/yp02/9Ifsr/5suB//3pxf/15ej/7dLa//Pf
        4//36Oj/9OHk//Pf4v/y3eH/8dzg//Ha3//w2d7/8Njg/+m9kP/0txb/AAAAAC9hwAAgTrAAK1m4JypW
        tWo3WbSePVmyzCdyzvAal/P/HZLv/yGL6v8lguP/KHnc/yp12P8oe9//KHjd/0eBzf/mzIT//erH//Xm
        6f/s0dr/8t3i//fp6f/z3+P/8t3h//Hb4P/w2t//8Nje/+/X3f/w2OH/6b2R//S3F/9PKwMAdUITEWdA
        GyBEeMaqiJjQ/7mx0v+Vmcz/JnvZ/xia9v8cnfT/Haz2/yCO6/8kguP/J33f/yaA4v8me+D/RYTQ/+XM
        iP/+68n/9OTo/+vM1//z3+P/9+np//Da4P/v2N7/79fd/+7V3P/t1Nv/7dPb//DZ4f/pvZP/9LcZ/5lk
        IRKOWh2thlYd42mNqvXd4u//2Nnn/4Wg2P8jgeD/Fp74/yWo9/9Ax/r/IpXv/yKE5v8oed3/KHne/yZ6
        4P9EhtL/5c2M//7sy//47O3/39bX/+7i4v/67+3/+Ovq//fp6f/35+j/9uXm//Xk5f/04uT/8t3k/+m+
        lP/0txr/tn0uIbR7LdyxeS3/Wo+u/0ai8f81jeX/Knzd/yKF5P8Wnvn/JJ/z/0qx8f9DqO7/Pp/p/zST
        5f8siOP/JYLk/0KM2P/lzpD//+7O/+zm5v+XwrP/pca4/+/m5P/v2N//7tXd/+3U3P/t0tv/7NHa/+zR
        2v/w2uL/6b6V//S3HP/gm0Mg3ppC3NuYQf9al7b/FpP0/x6M6/8khOT/Jn7g/yWB4f8ig+H/IIjj/yOU
        6v8qoO7/MKjw/zOq7v8vpOb/RJ3H/+XPkP//79D/+O/u/+rc3//I3dL/3efd//vv7v/57ev/+Ovq//fp
        6f/36Oj/9ubn//Th5v/pvpb/9Lcd//GoTiDwp03c7KRL/2Ceu/8Wl/b/HJny/x6W7/8khOX/J3ze/ytz
        1f8tbM7/LGvM/ylv0P8leNb/KW/M/y1Smf9LUE//58eE///x0//y6+r/ocS3/8LRyP/57+3/8t/j//Hc
        4f/x2+D/8Nnf/+/Y3v/v2N7/8t7l/+m+lv/0th3/86tRIPKpUNzup07/X6G+/xSa+f8msvj/J7T3/x+L
        6/8kg+T/KHzf/yh63f8rddn/LW7T/zBnzf8zXsP/L0eV/0lEQv/nxof///LV//Tv7f/R19P/rNPB/9zm
        3f/56uv/9ujo//bm5//15Ob/9OPl//Ti5P/04uf/6b2V//O1HP/2rVUg9axT3PCpUf9epMH/Dp3+/zmx
        9v9Ou/X/Mpjs/y2I4/8re93/KXjd/yh53v8ped3/Knbc/y9r0/8uTJr/UExK/+nIjP//8db/+PDv/8fS
        zP/b4Nr/9vTu//nt7P/46+r/9+jp//bn6P/25uf/9eXm//Xk6P/pvJT/87Ma//iwWCD3r1bc9axS/62o
        hv9co8P/NJbW/yya5v83p+//PKzw/zmq7/8xpe//KJ3v/yOQ5/8ngdX/MXG3/zxVfP9gXFX/6smQ///y
        1//u6+n/qMm9/57Kt//p6+X/9eHl//DX3v/x2d//8Nrg//Da4P/x2+D/9OLo/+m8k//ysRj/+7NbIPmx
        Wdz3r1b/9qxR//CqUv+Cbkz/KUxk/zFtlP8sg7r/KY/Q/zeIu/9Ff5v/RW1//0lZZP9NUVP/TE1M/2Rf
        V//qypT///HY//359f/88vD/5fHn/9vj2v/RvMP/z7vB/9XFx//s3d7/+ezr//ru7P/36Ov/6buS//Kv
        Ff/9tV4g/LRc3PmxWf/3rlb/961S/4xmOf80MTP/SkZG/1FRU/9SWV7/U1ZY/1RSUf9TUVD/UlFQ/1FR
        UP9OTk//ZWFa/+rKmP//8dr///z4///89v/7+PL/qqKl/6KWnf+qoaX/pZyh/56Tl//u3N//9+fo//Xm
        6v/ouZD/8a4U//+3YCD+tl/c/LRc//mxWf/5sFb/jWg8/zQzNv9JSEn/UlFS/1dWVv9WVlb/VVVV/1RU
        VP9TU1P/UlJS/1BQUP9nYlz/68uc///v0///+e7///nt/+fv6/9ktNn/fsbw/4fK8/9+x/H/YKLT/9XD
        yv/z2dL/893Y/+y/jP/0tSD//7dgIP+3YNz+tl///LNc//yyWf+RbEH/NjU4/0dFR/9OTE7/UlFS/1JR
        Uv9RUFH/UE9Q/09OT/9PTk//TUxO/11ZVf/RtZD/7M2g/+3Pof/505j/2tes/3Pi+f9l4P7/a9/8/mbe
        /v9ixvb9yrl76fvPcOP7133j+s9j5Pa7K9f/t2Ag/7dg3P+3YP/+tl///rVc/5NuQ/8yMTX/PTs+/0E/
        Qv9EQkT/REJE/0NCRP9DQkT/Q0FE/0JBQ/9CQEP/QkBC/1FNS/9YUk7/Z1lJ/8aINf/PlkL/r7uc/5Ca
        e/+Fmoqskez/c4nW+5Kyuowz/89NIv7XYiL90lYj978zG/+3YCD/t2Dc/7dg//+3YP//t1//rn9I/zoy
        K/85Mi3/OjQu/zs0Lv87NC7/OzQu/zo0Lf86My3/OjMt/zkzLP85Miz/ODEr/zUvKv9YQyv/xoAn/8+E
        I/+4dhz/klkO/3dCCX+ARgAAqeT+Apvc/gCf3v4AAAAAAAAAAAAAAAAA+rRdIP22X9z/t2D//7dg//+3
        YP/3sVz/2ZxR/9KWTf/QlEv/zpJI/8yQRf/KjUL/x4s//8WIPP/Dhjr/wYQ3/76BNP+8fzH/unwu/8aC
        Lf/Viiv/0Ycn/7p4Hv+TXRP/eEYOf4RQDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVmEcg4KBN3PGt
        V//8tV7//7dg//+3YP//t17//bRb//qxV//3rlT/9atR//KoTf/vpkr/7aNH/+qgQ//nnUD/5Jo8/+GX
        OP/flDX/25Ax/9eNLv/TiSr/uHgf/41aEv9yQg1/fU0OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALaC
        ZTWsdzLfwok8/9ydS//wrFf/+7Ve//+3YP/9tV7/+rJa//KqUP/nnkL/5p1B/+WbP//jmj7/4pk8/+KZ
        PP/kmz7/4pg7/9+VOP/ckjT/04wu/8SBJv+jaxn/fE0M/3FDGov/yv8I1J+7AAAAAAAAAAAAAAAAAAAA
        AAAAAAAA3rfF2rySg/mhcUH/p3Iv/8GHO//anEr/7qtW//q0Xf/9tV7/9KtS/+adQf/lnED/5Js+/+OZ
        Pf/imDv/45k8/+edQf/jmj7/2pM3/8qIL/+2eSX/nmYZ/4laGv+Wbkv/x6Cj7eC0yW/gt8kA4LbIAAAA
        AAAAAAAAAAAAAAAAAADu1Nv/79Tc/+DDw/+6ln//nm8+/6VwLf+/hjr/2JpJ/+2qVf/xqlH/555D/+ad
        Qf/lnED/5Js+/+OaPf/jmj3/4JpA/9CONv+6fiv/omof/5BdH/+fdE7/yqqe/+nN0//t0Nn/5cDOie/V
        2wDiuMsAAAAAAAAAAAAAAAAAAAAAAPPe4bLz3+Ly9ODj//Pf4v/gyMT/t5N7/5lrOv+ibSz/vYU6/9CS
        QP/YlDz/45tA/+adQf/kmz//25U6/82MNP+9gjH/pG0j/5FdIf+dckz/yaqe/+zU1//z3eL/8tzg/vDX
        3Nrmw9BP7tTaAOO5zAAAAAAAAAAAAAAAAAAAAAAA9ePkCvXj5Ej15OWy9eTl9fbl5//14+X/3sfC/7GO
        df+VZjb/nWgm/7B3K//FhzT/z443/8qKNP+4fSz/omoi/5BdIv+Zb0j/xqiZ/+zX1//24+b/9OLk/vTh
        497z3+KA893hIunI0gHv1twAAAAAAAAAAAAAAAAAAAAAAAAAAAD36+kA9ubnAPbn5wv35+hQ9+jouffo
        6Pf46On/9OPk/9vDvf+sh27/j2Iw/5NjIf+aaiT/lWQh/4paIf+VakX/waOU/+rV1f/35ej/9ubn//bm
        5uP25eaI9eTlJ/Xk5QH15OUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+u7tAPjr
        6gD46+oN+ezrV/nt68D57Ov5+Ojp//Lf4v/Vu7X/n31g/3RLIf+BWTf/uJiL/+fQ0P/25Of/+Onp//jr
        6uf46uqQ9+npLPjp6QL46ekAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPzy7wD67+0A+vDtEfvx7l/78e7H+e7s+/bl5//s1Nr/0bO0/97Cxv/z3eP/+Onp//rv
        7ev68O2Y+u7sMvru7AP67uwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD99/MA/PPwAPz18RT99vFm/fXxy/ns7Pvy3OL/9ePm//vy
        7+399fGe/PTwN/zz7wT88/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//v1AP769AD++vQb//v1fv75
        9Of/+vS+//r0R/748wb++PMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/wAAAP4AAAD+AAAA/gAAAPgAAADgAAAAgAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF8AAAB/AAAAfwAAAD8AAAA/AAAAPwAA
        AD8AAAA/wAAA//AAA//8AA///wA////A//8=
</value>
  </data>
</root>